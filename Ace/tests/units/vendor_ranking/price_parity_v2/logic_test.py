import pytest

from vendor_ranking.data import refresh_ranking_penalties_v2
from vendor_ranking.price_parity_v2.logic import apply_ranking_penalty


@pytest.fixture
def vendor_list() -> list[int]:
    return [
        7766,
        1165,
        33849,
        680511,
        20177,
        696692,
        1520,
        663512,
        12989,
        679588,
        699213,
        36997,
        6372,
        677855,
        668073,
        679574,
        696008,
        21909,
        42293,
        650488,
        640220,
        24646,
        691189,
        29957,
        632314,
        20834,
        29686,
        694924,
        4590,
        697080,
        674733,
        639220,
        619892,
        633044,
        689655,
        661551,
        51782,
        698494,
        37513,
        622170,
        699101,
        698536,
        664552,
        25008,
        1128,
        37004,
        684470,
        645838,
        12894,
        694671,
        690775,
        699116,
        619677,
        634720,
        676171,
        623206,
        659285,
        699878,
        642108,
        670664,
        673023,
        46348,
        639264,
        702352,
        690885,
        31534,
        600829,
        622971,
        699892,
        650550,
        686467,
        679558,
        702418,
        699896,
        4589,
        675129,
        691198,
        621405,
        52747,
        677309,
        604891,
        691175,
        39490,
        47657,
        619951,
        667343,
        682512,
        632387,
        46493,
        654412,
        28373,
        36337,
        662713,
        694685,
        677877,
        677780,
        21846,
        611046,
        36606,
        665230,
        667927,
        643152,
        670146,
        698045,
        681213,
        41895,
        675069,
        621885,
        621874,
        611081,
        611118,
        611120,
        679026,
        22058,
        646186,
        697595,
        50602,
        661795,
        30276,
        685802,
        681352,
        661799,
        674281,
        663653,
        678603,
        33409,
        643053,
        670619,
        1678,
        3710,
        1132,
        648126,
        600582,
        615064,
        678091,
        695038,
        3023,
        28823,
        6342,
        4566,
        688704,
        680565,
        659021,
        654978,
        686563,
        608042,
        691182,
        15564,
        6410,
        656644,
        699222,
        15566,
        634274,
        644492,
        635501,
        662408,
        626154,
        694747,
        668481,
        654972,
        635784,
        643363,
        20849,
        683786,
        642378,
        37733,
        658972,
        699661,
        15562,
        634334,
        700248,
        659989,
        650582,
        674098,
        697865,
        638180,
        695894,
        662433,
        689094,
        42349,
        679555,
        681193,
        626159,
        695911,
        685013,
        694340,
        675557,
        643846,
        680225,
        605438,
        699654,
        15563,
        699423,
        641956,
        683048,
        674187,
        680167,
        689177,
        23889,
        683052,
        674289,
        691603,
        683057,
        643142,
        672857,
        670523,
        51380,
        696760,
        679084,
        633916,
        649552,
        634534,
        634197,
        650085,
    ]


@pytest.mark.asyncio
@pytest.mark.parametrize("vendor_test_id", [(1165)])
async def test_price_parity_apply_penalty_v2(setup_db, vendor_list, vendor_test_id):
    await refresh_ranking_penalties_v2()
    num_changed_ranks, final_sorting = await apply_ranking_penalty(vendor_list)
    assert num_changed_ranks != 0
    before_applying_penalty_index = vendor_list.index(vendor_test_id)
    after_applying_penalty_index = final_sorting.index(vendor_test_id)
    assert before_applying_penalty_index < after_applying_penalty_index


@pytest.mark.asyncio
@pytest.mark.parametrize("vl_list, vendor_test_id", [([1165, 1, 2, 3, 4, 5], 1165)])
async def test_price_parity_apply_penalty_v2_num_changed_ranks(setup_db, vl_list, vendor_test_id):
    """Test that the number of changed ranks is as expected - with dummy vendor_ids except for the test vendor_id"""
    await refresh_ranking_penalties_v2()
    num_changed_ranks, final_sorting = await apply_ranking_penalty(vl_list)
    assert num_changed_ranks == 1
    before_applying_penalty_index = vl_list.index(vendor_test_id)
    after_applying_penalty_index = final_sorting.index(vendor_test_id)
    assert before_applying_penalty_index < after_applying_penalty_index
